<appendix xml:id="level2syscalls" xmlns="http://docbook.org/ns/docbook">
<title>Level Two System Service Requests</title>

<sect1>
<title>F$AllImg - Allocate Image RAM blocks</title>

<informaltable frame="none" rowsep="0" colsep="0">
<tgroup cols="2">
<colspec colwidth="1.4in"/>
<colspec colwidth="3.6in"/>
<tbody>
<row>
	<entry>ASSEMBLER CALL:</entry>
	<entry>OS9 F$AllImg</entry>
</row>
<row>
	<entry>MACHINE CODE:</entry>
	<entry>103F 3A</entry>
</row>
<row>
	<entry>INPUT:</entry>
	<entry><literallayout>(A) = Beginning block number
(B) = Number of blocks
(X) = Process Descriptor pointer</literallayout></entry>
</row>
<row>
	<entry>OUTPUT:</entry>
	<entry>None.</entry>
</row>
<row>
	<entry>ERROR OUTPUT:</entry>
	<entry><literallayout>(CC) = C bit set.
(B) = Appropriate error code.</literallayout></entry>
</row>
</tbody>
</tgroup>
</informaltable>

<para>Allocates RAM blocks for process DAT image. The blocks do not
need to be contiguous.</para>

<note><para>This is a privileged system mode service request.</para></note>
</sect1>

<sect1>
<title>F$AllPrc - Allocate Process descriptor</title>

<informaltable frame="none" rowsep="0" colsep="0">
<tgroup cols="2">
<colspec colwidth="1.4in"/>
<colspec colwidth="3.6in"/>
<tbody>
<row>
	<entry>ASSEMBLER CALL:</entry>
	<entry>OS9 F$AllPrc</entry>
</row>
<row>
	<entry>MACHINE CODE:</entry>
	<entry>103F 4B</entry>
</row>
<row>
	<entry>INPUT:</entry>
	<entry>none</entry>
</row>
<row>
	<entry>OUTPUT:</entry>
	<entry>(U) = Process Descriptor pointer</entry>
</row>
<row>
	<entry>ERROR OUTPUT:</entry>
	<entry><literallayout>(CC) = C bit set.
(B) = Appropriate error code.</literallayout></entry>
</row>
</tbody>
</tgroup>
</informaltable>

<para>Allocates and initializes a 512-byte process descriptor.</para>

<note><para>This is a privileged system mode service request.</para></note>
</sect1>

<sect1>
<title>F$AllRAM - Allocate RAM blocks</title>

<informaltable frame="none" rowsep="0" colsep="0">
<tgroup cols="2">
<colspec colwidth="1.4in"/>
<colspec colwidth="3.6in"/>
<tbody>
<row>
	<entry>ASSEMBLER CALL:</entry>
	<entry>OS9 F$AllRAM</entry>
</row>
<row>
	<entry>MACHINE CODE:</entry>
	<entry>103F 39</entry>
</row>
<row>
	<entry>INPUT:</entry>
	<entry>(B) = Desired block count</entry>
</row>
<row>
	<entry>OUTPUT:</entry>
	<entry>(D) = Beginning RAM block number</entry>
</row>
<row>
	<entry>ERROR OUTPUT:</entry>
	<entry><literallayout>(CC) = C bit set.
(B) = Appropriate error code.</literallayout></entry>
</row>
</tbody>
</tgroup>
</informaltable>

<para>Searches the Memory Block map for the desired number of contuguous
free RAM blocks.</para>

<note><para>This is a privileged system mode service request.</para></note>
</sect1>

<sect1>
<title>F$AllTsk - Allocate process Task number</title>

<informaltable frame="none" rowsep="0" colsep="0">
<tgroup cols="2">
<colspec colwidth="1.4in"/>
<colspec colwidth="3.6in"/>
<tbody>
<row>
	<entry>ASSEMBLER CALL:</entry>
	<entry>OS9 F$AllTsk</entry>
</row>
<row>
	<entry>MACHINE CODE:</entry>
	<entry>103F 3F</entry>
</row>
<row>
	<entry>INPUT:</entry>
	<entry>(X) = Process Descriptor pointer </entry>
</row>
<row>
	<entry>OUTPUT:</entry>
	<entry>None.</entry>
</row>
<row>
	<entry>ERROR OUTPUT:</entry>
	<entry><literallayout>(CC) = C bit set.
(B) = Appropriate error code.</literallayout></entry>
</row>
</tbody>
</tgroup>
</informaltable>

<para>Allocates a Task number for the given process.</para>

<note><para>This is a privileged system mode service request.</para></note>
</sect1>

<sect1>
<title>F$Boot - Bootstrap system</title>

<informaltable frame="none" rowsep="0" colsep="0">
<tgroup cols="2">
<colspec colwidth="1.4in"/>
<colspec colwidth="3.6in"/>
<tbody>
<row>
	<entry>ASSEMBLER CALL:</entry>
	<entry>OS9 F$Boot</entry>
</row>
<row>
	<entry>MACHINE CODE:</entry>
	<entry>103F 35</entry>
</row>
<row>
	<entry>INPUT:</entry>
	<entry>none</entry>
</row>
<row>
	<entry>OUTPUT:</entry>
	<entry>none</entry>
</row>
<row>
	<entry>ERROR OUTPUT:</entry>
	<entry><literallayout>(CC) = C bit set.
(B) = Appropriate error code.</literallayout></entry>
</row>
</tbody>
</tgroup>
</informaltable>

<para>Links to the module named <quote>Boot</quote> or as specified in the INIT module;
calls linked module; and expects the return of a pointer and size of
an area which is then searched for new modules.</para>

<note><para>This is a privileged system mode service request.</para></note>
</sect1>

<sect1>
<title>F$BtMem - Bootstrap Memory request</title>

<informaltable frame="none" rowsep="0" colsep="0">
<tgroup cols="2">
<colspec colwidth="1.4in"/>
<colspec colwidth="3.6in"/>
<tbody>
<row>
	<entry>ASSEMBLER CALL:</entry>
	<entry>OS9 F$BtMem</entry>
</row>
<row>
	<entry>MACHINE CODE:</entry>
	<entry>103F 36</entry>
</row>
<row>
	<entry>INPUT:</entry>
	<entry>(D) = Byte count requested.</entry>
</row>
<row>
	<entry>OUTPUT:</entry>
	<entry><literallayout>(D) = Byte count granted.
(U) = Pointer to memory allocated.</literallayout></entry>
</row>
<row>
	<entry>ERROR OUTPUT:</entry>
	<entry><literallayout>(CC) = C bit set.
(B) = Appropriate error code.</literallayout></entry>
</row>
</tbody>
</tgroup>
</informaltable>

<para>Allocates requested memory (rounded up to nearest block) as
contigous memory in the system's address space.</para>

<note><para>This is a privileged system mode service request.</para></note>
</sect1>

<sect1>
<title>F$ClrBlk - Clear specific Block</title>

<informaltable frame="none" rowsep="0" colsep="0">
<tgroup cols="2">
<colspec colwidth="1.4in"/>
<colspec colwidth="3.6in"/>
<tbody>
<row>
	<entry>ASSEMBLER CALL:</entry>
	<entry>OS9 F$ClrBlk</entry>
</row>
<row>
	<entry>MACHINE CODE:</entry>
	<entry>103F 50</entry>
</row>
<row>
	<entry>INPUT:</entry>
	<entry><literallayout>(B) = Number of blocks
(U) = Address of first block</literallayout></entry>
</row>
<row>
	<entry>OUTPUT:</entry>
	<entry>None.</entry>
</row>
<row>
	<entry>ERROR OUTPUT:</entry>
	<entry>None.</entry>
</row>
</tbody>
</tgroup>
</informaltable>

<para>Marks blocks in process DAT image as unallocated.</para>

<note><para>This is a privileged system mode service request.</para></note>
</sect1>

<sect1>
<title>F$CpyMem - Copy external Memory</title>

<informaltable frame="none" rowsep="0" colsep="0">
<tgroup cols="2">
<colspec colwidth="1.4in"/>
<colspec colwidth="3.6in"/>
<tbody>
<row>
	<entry>ASSEMBLER CALL:</entry>
	<entry>OS9 F$CpyMem</entry>
</row>
<row>
	<entry>MACHINE CODE:</entry>
	<entry>103F 1B</entry>
</row>
<row>
	<entry>INPUT:</entry>
	<entry><literallayout>(D) = Starting Memory Block number
(X) = Offset in block to begin copy
(Y) = Byte count
(U) = Caller's destination buffer</literallayout></entry>
</row>
<row>
	<entry>OUTPUT:</entry>
	<entry>None.</entry>
</row>
<row>
	<entry>ERROR OUTPUT:</entry>
	<entry><literallayout>(CC) = C bit set.
(B) = Appropriate error code.</literallayout></entry>
</row>
</tbody>
</tgroup>
</informaltable>

<para>Reads external memory into the user's buffer for inspection. Any
memory in the system may be viewed in this way.</para>
</sect1>

<sect1>
<title>F$DATLog - Convert DAT block/offset to Logical Addr</title>

<informaltable frame="none" rowsep="0" colsep="0">
<tgroup cols="2">
<colspec colwidth="1.4in"/>
<colspec colwidth="3.6in"/>
<tbody>
<row>
	<entry>ASSEMBLER CALL:</entry>
	<entry>OS9 F$DATLog</entry>
</row>
<row>
	<entry>MACHINE CODE:</entry>
	<entry>103F 44</entry>
</row>
<row>
	<entry>INPUT:</entry>
	<entry><literallayout>(B) = DAT image offset
(X) = Block offset</literallayout></entry>
</row>
<row>
	<entry>OUTPUT:</entry>
	<entry>(X) = Logical address.</entry>
</row>
<row>
	<entry>ERROR OUTPUT:</entry>
	<entry><literallayout>(CC) = C bit set.
(B) = Appropriate error code.</literallayout></entry>
</row>
</tbody>
</tgroup>
</informaltable>

<para>Converts a DAT imaqe block number and block offset to its
equivalent logical address.</para>

<note><para>This is a privileged system mode service request.</para></note>
</sect1>

<sect1>
<title>F$DATTmp - Make Temporary DAT image</title>

<informaltable frame="none" rowsep="0" colsep="0">
<tgroup cols="2">
<colspec colwidth="1.4in"/>
<colspec colwidth="3.6in"/>
<tbody>
<row>
	<entry>ASSEMBLER CALL:</entry>
	<entry>OS9 F$DATTmp</entry>
</row>
<row>
	<entry>MACHINE CODE:</entry>
	<entry>103F 45</entry>
</row>
<row>
	<entry>INPUT:</entry>
	<entry>(D) = Block number</entry>
</row>
<row>
	<entry>OUTPUT:</entry>
	<entry>(Y) = DAT image pointer</entry>
</row>
<row>
	<entry>ERROR OUTPUT:</entry>
	<entry><literallayout>(CC) = C bit set.
(B) = Appropriate error code.</literallayout></entry>
</row>
</tbody>
</tgroup>
</informaltable>

<para>Builds a temporary DAT image to access the given memory block.</para>

<note><para>This is a privileged system mode service request.</para></note>
</sect1>

<sect1>
<title>F$DelImg - Deallocate Image RAM blocks</title>

<informaltable frame="none" rowsep="0" colsep="0">
<tgroup cols="2">
<colspec colwidth="1.4in"/>
<colspec colwidth="3.6in"/>
<tbody>
<row>
	<entry>ASSEMBLER CALL:</entry>
	<entry>OS9 F$DelImg</entry>
</row>
<row>
	<entry>MACHINE CODE:</entry>
	<entry>103F 3B</entry>
</row>
<row>
	<entry>INPUT:</entry>
	<entry><literallayout>(A) = Beginning block number
(B) = Block count
(X) = Process Descriptor pointer</literallayout></entry>
</row>
<row>
	<entry>OUTPUT:</entry>
	<entry>None.</entry>
</row>
<row>
	<entry>ERROR OUTPUT:</entry>
	<entry><literallayout>(CC) = C bit set.
(B) = Appropriate error code.</literallayout></entry>
</row>
</tbody>
</tgroup>
</informaltable>

<para>Deallocated memory from the process' address space.</para>

<note><para>This is a privileged system mode service request.</para></note>
</sect1>

<sect1>
<title>F$DelPrc - Deallocate Process descriptor</title>

<informaltable frame="none" rowsep="0" colsep="0">
<tgroup cols="2">
<colspec colwidth="1.4in"/>
<colspec colwidth="3.6in"/>
<tbody>
<row>
	<entry>ASSEMBLER CALL:</entry>
	<entry>OS9 F$DelPrc</entry>
</row>
<row>
	<entry>MACHINE CODE:</entry>
	<entry>103F 4C</entry>
</row>
<row>
	<entry>INPUT:</entry>
	<entry>(A) = Process ID.</entry>
</row>
<row>
	<entry>OUTPUT:</entry>
	<entry>None.</entry>
</row>
<row>
	<entry>ERROR OUTPUT:</entry>
	<entry><literallayout>(CC) = C bit set.
(B) = Appropriate error code.</literallayout></entry>
</row>
</tbody>
</tgroup>
</informaltable>

<para>Returns process descriptor memory to system free memory pool.</para>

<note><para>This is a privileged system mode service request.</para></note>
</sect1>

<sect1>
<title>F$DelRam - Deallocate RAM blocks</title>

<informaltable frame="none" rowsep="0" colsep="0">
<tgroup cols="2">
<colspec colwidth="1.4in"/>
<colspec colwidth="3.6in"/>
<tbody>
<row>
	<entry>ASSEMBLER CALL:</entry>
	<entry>OS9 F$DelRam</entry>
</row>
<row>
	<entry>MACHINE CODE:</entry>
	<entry>103F 51</entry>
</row>
<row>
	<entry>INPUT:</entry>
	<entry><literallayout>(B) = Number of blocks
(X) = Beginning block number.</literallayout></entry>
</row>
<row>
	<entry>OUTPUT:</entry>
	<entry>None.</entry>
</row>
<row>
	<entry>ERROR OUTPUT:</entry>
	<entry>None.</entry>
</row>
</tbody>
</tgroup>
</informaltable>

<para>Marks blocks in system memory block map as unallocated.</para>

<note><para>This is a privileged system mode service request.</para></note>
</sect1>

<sect1>
<title>F$DelTsk - Deallocate process Task number</title>
<informaltable frame="none" rowsep="0" colsep="0">
<tgroup cols="2">
<colspec colwidth="1.4in"/>
<colspec colwidth="3.6in"/>
<tbody>
<row>
	<entry>ASSEMBLER CALL:</entry>
	<entry>OS9 F$DelTsk</entry>
</row>
<row>
	<entry>MACHINE CODE:</entry>
	<entry>103F 40</entry>
</row>
<row>
	<entry>INPUT:</entry>
	<entry>(X) = Process Descriptor pointer</entry>
</row>
<row>
	<entry>OUTPUT:</entry>
	<entry>None.</entry>
</row>
<row>
	<entry>ERROR OUTPUT:</entry>
	<entry><literallayout>(CC) = C bit set.
(B) = Appropriate error code.</literallayout></entry>
</row>
</tbody>
</tgroup>
</informaltable>

<para>Releases the Task number in use by the process.</para>

<note><para>This is a privileged system mode service request.</para></note>

</sect1>

<sect1>
<title>F$ELink - Link using module directory Entry</title>

<informaltable frame="none" rowsep="0" colsep="0">
<tgroup cols="2">
<colspec colwidth="1.4in"/>
<colspec colwidth="3.6in"/>
<tbody>
<row>
	<entry>ASSEMBLER CALL:</entry>
	<entry>OS9 F$ELink</entry>
</row>
<row>
	<entry>MACHINE CODE:</entry>
	<entry>103F 4D</entry>
</row>
<row>
	<entry>INPUT:</entry>
	<entry><literallayout>(B) = Module type.
(X) = Pointer to module directory entry.</literallayout></entry>
</row>
<row>
	<entry>OUTPUT:</entry>
	<entry>None.</entry>
</row>
<row>
	<entry>ERROR OUTPUT:</entry>
	<entry><literallayout>(CC) = C bit set.
(B) = Appropriate error code.</literallayout></entry>
</row>
</tbody>
</tgroup>
</informaltable>

<para>Performs a <quote>Link</quote> given a pointer to a module directory entry. Note
that this call differs from F$Link in that a pointer to the module
directory entry is supplied rather than a pointer to a module name.</para>

<note><para>This is a privileged system mode service request.</para></note>

</sect1>

<sect1>
<title>F$FModul - Find Module directory entry</title>
<informaltable frame="none" rowsep="0" colsep="0">
<tgroup cols="2">
<colspec colwidth="1.4in"/>
<colspec colwidth="3.6in"/>
<tbody>
<row>
	<entry>ASSEMBLER CALL:</entry>
	<entry>OS9 F$FModul</entry>
</row>
<row>
	<entry>MACHINE CODE:</entry>
	<entry>103F 4E</entry>
</row>
<row>
	<entry>INPUT:</entry>
	<entry><literallayout>(A) = Module type.
(X) = Module Name string pointer.
(Y) = Name string DAT image pointer.</literallayout></entry>
</row>
<row>
	<entry>OUTPUT:</entry>
	<entry><literallayout>(A) = Module Type.
(B) = Module Revision.
(X) = Updated past name string.
(U) = Module directory entry pointer.</literallayout></entry>
</row>
<row>
	<entry>ERROR OUTPUT:</entry>
	<entry><literallayout>(CC) = C bit set.
(B) = Appropriate error code.</literallayout></entry>
</row>
</tbody>
</tgroup>
</informaltable>

<para>This call returns a pointer to the module directory entry given the
module name.</para>

<note><para>This is a privileged system mode service request.</para></note>
</sect1>

<sect1>
<title>F$FreeHB - Get Free High block</title>
<informaltable frame="none" rowsep="0" colsep="0">
<tgroup cols="2">
<colspec colwidth="1.4in"/>
<colspec colwidth="3.6in"/>
<tbody>
<row>
	<entry>ASSEMBLER CALL:</entry>
	<entry>OS9 F$FreeHB</entry>
</row>
<row>
	<entry>MACHINE CODE:</entry>
	<entry>103F 3E</entry>
</row>
<row>
	<entry>INPUT:</entry>
	<entry><literallayout>(B) = Block count
(Y) = DAT image pointer</literallayout></entry>
</row>
<row>
	<entry>OUTPUT:</entry>
	<entry>(A) High block number</entry>
</row>
<row>
	<entry>ERROR OUTPUT:</entry>
	<entry><literallayout>(CC) = C bit set.
(B) = Appropriate error code.</literallayout></entry>
</row>
</tbody>
</tgroup>
</informaltable>

<para>Searches the DAT image for the highest free block of given size.</para>

<note><para>This is a privileged system mode service request.</para></note>

</sect1>

<sect1>
<title>F$FreeLB - Get Free Low block</title>
<informaltable frame="none" rowsep="0" colsep="0">
<tgroup cols="2">
<colspec colwidth="1.4in"/>
<colspec colwidth="3.6in"/>
<tbody>
<row>
	<entry>ASSEMBLER CALL:</entry>
	<entry>OS9 F$FreeLB</entry>
</row>
<row>
	<entry>MACHINE CODE:</entry>
	<entry>103F 3D</entry>
</row>
<row>
	<entry>INPUT:</entry>
	<entry><literallayout>(B) = Block count
(Y) = DAT image pointer</literallayout></entry>
</row>
<row>
	<entry>OUTPUT:</entry>
	<entry>(A) = Low block number</entry>
</row>
<row>
	<entry>ERROR OUTPUT:</entry>
	<entry><literallayout>(CC) = C bit set.
(B) = Appropriate error code.</literallayout></entry>
</row>
</tbody>
</tgroup>
</informaltable>

<para>Searches the DAT image for the lowest free block of given size.</para>

<note><para>This is a privileged system mode service request.</para></note>
</sect1>

<sect1>
<title>F$GBlkMp - Get system Block Map copy</title>
<informaltable frame="none" rowsep="0" colsep="0">
<tgroup cols="2">
<colspec colwidth="1.4in"/>
<colspec colwidth="3.6in"/>
<tbody>
<row>
	<entry>ASSEMBLER CALL:</entry>
	<entry>OS9 F$GBlkMp</entry>
</row>
<row>
	<entry>MACHINE CODE:</entry>
	<entry>103F 19</entry>
</row>
<row>
	<entry>INPUT:</entry>
	<entry>(X) = 1024 byte buffer pointer</entry>
</row>
<row>
	<entry>OUTPUT:</entry>
	<entry><literallayout>(D) = Number of bytes per block (MMU block size dependent).
(Y) = Size of system's memory block map.</literallayout></entry>
</row>
<row>
	<entry>ERROR OUTPUT:</entry>
	<entry><literallayout>(CC) = C bit set.
(B) = Appropriate error code.</literallayout></entry>
</row>
</tbody>
</tgroup>
</informaltable>

<para>Copies the system's memory block map into the user's buffer for inspection.</para>
</sect1>

<sect1>
<title>F$GModDr - Get Module Directory copy</title>
<informaltable frame="none" rowsep="0" colsep="0">
<tgroup cols="2">
<colspec colwidth="1.4in"/>
<colspec colwidth="3.6in"/>
<tbody>
<row>
	<entry>ASSEMBLER CALL:</entry>
	<entry>OS9 F$GModDr</entry>
</row>
<row>
	<entry>MACHINE CODE:</entry>
	<entry>103F 1A</entry>
</row>
<row>
	<entry>INPUT:</entry>
	<entry>(X) = 2048 byte buffer pointer</entry>
</row>
<row>
	<entry>ERROR OUTPUT:</entry>
	<entry><literallayout>(CC) = C bit set.
(B) = Appropriate error code.</literallayout></entry>
</row>
</tbody>
</tgroup>
</informaltable>

<para>Copies the system's module directory into the user's buffer for inspection.</para>
</sect1>

<sect1>
<title>F$GPrDsc - Get Process Descriptor copy</title>

<informaltable frame="none" rowsep="0" colsep="0">
<tgroup cols="2">
<colspec colwidth="1.4in"/>
<colspec colwidth="3.6in"/>
<tbody>
<row>
	<entry>ASSEMBLER CALL:</entry>
	<entry>OS9 F$GPrDsc</entry>
</row>
<row>
	<entry>MACHINE CODE:</entry>
	<entry>103F 18</entry>
</row>
<row>
	<entry>INPUT:</entry>
	<entry><literallayout>(A) = Requested process ID.
(X) = 512 byte buffer pointer.</literallayout></entry>
</row>
<row>
	<entry>OUTPUT:</entry>
	<entry>None.</entry>
</row>
<row>
	<entry>ERROR OUTPUT:</entry>
	<entry><literallayout>(CC) = C bit set.
(B) = Appropriate error code.</literallayout></entry>
</row>
</tbody>
</tgroup>
</informaltable>

<para>Copies a process descriptor into the calling process' buffer for
inspection There is no way to change data in a process
descriptor.</para>
</sect1>

<sect1>
<title>F$GProcP - Get Process Pointer</title>

<informaltable frame="none" rowsep="0" colsep="0">
<tgroup cols="2">
<colspec colwidth="1.4in"/>
<colspec colwidth="3.6in"/>
<tbody>
<row>
	<entry>ASSEMBLER CALL:</entry>
	<entry>OS9 F$GProcP</entry>
</row>
<row>
	<entry>MACHINE CODE:</entry>
	<entry>103F 37</entry>
</row>
<row>
	<entry>INPUT:</entry>
	<entry>(A) = Process ID</entry>
</row>
<row>
	<entry>OUTPUT:</entry>
	<entry>(Y) = Pointer to Process Descriptor</entry>
</row>
<row>
	<entry>ERROR OUTPUT:</entry>
	<entry><literallayout>(CC) = C bit set.
(B) = Appropriate error code.</literallayout></entry>
</row>
</tbody>
</tgroup>
</informaltable>

<para>Translates a process ID number to the address of its process
descriptor in the system address space.</para>

<note><para>This is a privileged system mode service request.</para></note>
</sect1>

<sect1>
<title>F$LDABX - Load A from 0,1 in task B</title>

<informaltable frame="none" rowsep="0" colsep="0">
<tgroup cols="2">
<colspec colwidth="1.4in"/>
<colspec colwidth="3.6in"/>
<tbody>
<row>
	<entry>ASSEMBLER CALL:</entry>
	<entry>OS9 F$LDABX</entry>
</row>
<row>
	<entry>MACHINE CODE:</entry>
	<entry>103F 49</entry>
</row>
<row>
	<entry>INPUT:</entry>
	<entry><literallayout>(B) = Task number
(X) = Data pointer</literallayout></entry>
</row>
<row>
	<entry>OUTPUT:</entry>
	<entry>(A) = Data byte at 0,X in task's address space</entry>
</row>
<row>
	<entry>ERROR OUTPUT:</entry>
	<entry><literallayout>(CC) = C bit set.
(B) = Appropriate error code.</literallayout></entry>
</row>
</tbody>
</tgroup>
</informaltable>

<para>One byte is returned from the logical address in (X) in the
given task's address space. This is typically used to get one
byte from the current process's memory in a system state
routine.</para>

<note><para>This is a privileged system mode service request.</para></note>
</sect1>

<sect1>
<title>F$LDAXY - Load A [X, [Y] ]</title>

<informaltable frame="none" rowsep="0" colsep="0">
<tgroup cols="2">
<colspec colwidth="1.4in"/>
<colspec colwidth="3.6in"/>
<tbody>
<row>
	<entry>ASSEMBLER CALL:</entry>
	<entry>OS9 F$LDAXY</entry>
</row>
<row>
	<entry>MACHINE CODE:</entry>
	<entry>103F 46</entry>
</row>
<row>
	<entry>INPUT:</entry>
	<entry><literallayout>(X) = Block offset
(Y) = DAT image pointer</literallayout></entry>
</row>
<row>
	<entry>OUTPUT:</entry>
	<entry>(A) = data byte at (X) offset of (Y)</entry>
</row>
<row>
	<entry>ERROR OUTPUT:</entry>
	<entry><literallayout>(CC) = C bit set.
(B) = Appropriate error code.</literallayout></entry>
</row>
</tbody>
</tgroup>
</informaltable>

<para>Returns one data byte in the memory block specified by the DAT image in
(Y), offset by (X).</para>

<note><para>This is a privileged system mode service request.</para></note>
</sect1>

<sect1>
<title>F$LDAXYP - Load A [X+, [Y] ]</title>

<informaltable frame="none" rowsep="0" colsep="0">
<tgroup cols="2">
<colspec colwidth="1.4in"/>
<colspec colwidth="3.6in"/>
<tbody>
<row>
	<entry>ASSEMBLER CALL:</entry>
	<entry>OS9 F$LDAXYP</entry>
</row>
<row>
	<entry>MACHINE CODE:</entry>
	<entry>103F 47</entry>
</row>
<row>
	<entry>INPUT:</entry>
	<entry><literallayout>(X) = Block offset
(Y) = DAT image pointer</literallayout></entry>
</row>
<row>
	<entry>OUTPUT:</entry>
	<entry><literallayout>(A) = Data byte at (X) offset of (Y)
(X) = incremented by one</literallayout></entry>
</row>
<row>
	<entry>ERROR OUTPUT:</entry>
	<entry><literallayout>(CC) = C bit set.
(B) = Appropriate error code.</literallayout></entry>
</row>
</tbody>
</tgroup>
</informaltable>

<para>Similar to the assembly instruction <quote>LDA ,X+</quote>, except that (X) refers
to an offset in the memory block described by the DAT
image at (Y).</para>

<note><para>This is a privileged system mode service request.</para></note>
</sect1>

<sect1>
<title>F$LDDDXY - Load D [D+X, [Y] ]</title>

<informaltable frame="none" rowsep="0" colsep="0">
<tgroup cols="2">
<colspec colwidth="1.4in"/>
<colspec colwidth="3.6in"/>
<tbody>
<row>
	<entry>ASSEMBLER CALL:</entry>
	<entry>OS9 F$LDDDXY</entry>
</row>
<row>
	<entry>MACHINE CODE:</entry>
	<entry>103F 48</entry>
</row>
<row>
	<entry>INPUT:</entry>
	<entry><literallayout>(D) = Offset to offset
(X) = Offset
(Y) = DAT image pointer</literallayout></entry>
</row>
<row>
	<entry>OUTPUT:</entry>
	<entry>(D) = bytes address by [D+X,Y]</entry>
</row>
<row>
	<entry>ERROR OUTPUT:</entry>
	<entry><literallayout>(CC) = C bit set.
(B) = Appropriate error code.</literallayout></entry>
</row>
</tbody>
</tgroup>
</informaltable>

<para>Loads two bytes from the memory block described by the DAT image
pointed to by (Y). The bytes loaded are at the offset (D+X) in
the memory block.</para>

<note><para>This is a privileged system mode service request.</para></note>
</sect1>

<sect1>
<title>F$MapBlk - Map specific Block</title>

<informaltable frame="none" rowsep="0" colsep="0">
<tgroup cols="2">
<colspec colwidth="1.4in"/>
<colspec colwidth="3.6in"/>
<tbody>
<row>
	<entry>ASSEMBLER CALL:</entry>
	<entry>OS9 F$MapBlk</entry>
</row>
<row>
	<entry>MACHINE CODE:</entry>
	<entry>103F 4F</entry>
</row>
<row>
	<entry>INPUT:</entry>
	<entry><literallayout>(B) = Number of blocks.
(X) = Beginning block number.</literallayout></entry>
</row>
<row>
	<entry>OUTPUT:</entry>
	<entry>(U) = Address of first block.</entry>
</row>
<row>
	<entry>ERROR OUTPUT:</entry>
	<entry><literallayout>(CC) = C bit set.
(B) = Appropriate error code.</literallayout></entry>
</row>
</tbody>
</tgroup>
</informaltable>

<para>Maps specified block(s) into unallocated blocks of process address space.</para>

<note><para>This is a privileged system mode service request.</para></note>
</sect1>

<sect1>
<title>F$Move - Move data (low bound first)</title>

<informaltable frame="none" rowsep="0" colsep="0">
<tgroup cols="2">
<colspec colwidth="1.4in"/>
<colspec colwidth="3.6in"/>
<tbody>
<row>
	<entry>ASSEMBLER CALL:</entry>
	<entry>OS9 F$Move</entry>
</row>
<row>
	<entry>MACHINE CODE:</entry>
	<entry>103F 38</entry>
</row>
<row>
	<entry>INPUT:</entry>
	<entry><literallayout>(A) = Source Task number
(B) = Destination Task number
(X) = Source pointer
(Y) = Byte count
(U) = Destination pointer</literallayout></entry>
</row>
<row>
	<entry>OUTPUT:</entry>
	<entry>None.</entry>
</row>
<row>
	<entry>ERROR OUTPUT:</entry>
	<entry><literallayout>(CC) = C bit set.
(B) = Appropriate error code.</literallayout></entry>
</row>
</tbody>
</tgroup>
</informaltable>

<para>Moves data bytes from one address space to anotber, usually from
System's to User's, or vice-versa.</para>

<note><para>This is a privileged system mode service request.</para></note>
</sect1>

<sect1>
<title>F$RelTsk - Release Task number</title>

<informaltable frame="none" rowsep="0" colsep="0">
<tgroup cols="2">
<colspec colwidth="1.4in"/>
<colspec colwidth="3.6in"/>
<tbody>
<row>
        <entry>ASSEMBLER CALL:</entry>
        <entry>OS9 F$RelTsk</entry>
</row>
<row>
        <entry>MACHINE CODE:</entry>
        <entry>103F 43</entry>
</row>
<row>
        <entry>INPUT:</entry>
        <entry>(B) = Task number</entry>
</row>
<row>
        <entry>OUTPUT:</entry>
        <entry>None.</entry>
</row>
<row>
        <entry>ERROR OUTPUT:</entry>
        <entry><literallayout>(CC) = C bit set.
(B) = Appropriate error code.</literallayout></entry>
</row>
</tbody>
</tgroup>
</informaltable>

<para>Releases the specified DAT Task number.</para>

<note><para>This is a privileged system mode service request.</para></note>
</sect1>

<sect1>
<title>F$ResTsk - Reserve Task number</title>

<para>DAT task number.
</para>
<informaltable frame="none" rowsep="0" colsep="0">
<tgroup cols="2">
<colspec colwidth="1.4in"/>
<colspec colwidth="3.6in"/>
<tbody>
<row>
        <entry>ASSEMBLER CALL:</entry>
        <entry>OS9 F$ResTsk</entry>
</row>
<row>
        <entry>MACHINE CODE:</entry>
        <entry>103F 42</entry>
</row>
<row>
        <entry>INPUT:</entry>
        <entry>none</entry>
</row>
<row>
        <entry>OUTPUT:</entry>
        <entry>(B) = Task number</entry>
</row>
<row>
        <entry>ERROR OUTPUT:</entry>
        <entry><literallayout>(CC) = C bit set.
(B) = Appropriate error code.</literallayout></entry>
</row>
</tbody>
</tgroup>
</informaltable>

<para>Finds a free DAT task number.</para>

<note><para>This is a privileged system mode service request.</para></note>
</sect1>

<sect1>
<title>F$SetImg - Set process DAT Image</title>

<informaltable frame="none" rowsep="0" colsep="0">
<tgroup cols="2">
<colspec colwidth="1.4in"/>
<colspec colwidth="3.6in"/>
<tbody>
<row>
	<entry>ASSEMBLER CALL:</entry>
	<entry>OS9 F$SetImg</entry>
</row>
<row>
	<entry>MACHINE CODE:</entry>
	<entry>103F 3C</entry>
</row>
<row>
	<entry>INPUT:</entry>
	<entry><literallayout>(A) = Beginning image block number
(B) = Block count
(X) = Process Descriptor pointer
(U) New image pointer</literallayout></entry>
</row>
<row>
	<entry>OUTPUT:</entry>
	<entry>None.</entry>
</row>
<row>
	<entry>ERROR OUTPUT:</entry>
	<entry><literallayout>(CC) = C bit set.
(B) = Appropriate error code.</literallayout></entry>
</row>
</tbody>
</tgroup>
</informaltable>

<para>Copies a DAT image into the process descriptor.</para>

<note><para>This is a privileged system mode service request.</para></note>
</sect1>

<sect1>
<title>F$SetTsk - Set process Task DAT registers</title>

<informaltable frame="none" rowsep="0" colsep="0">
<tgroup cols="2">
<colspec colwidth="1.4in"/>
<colspec colwidth="3.6in"/>
<tbody>
<row>
	<entry>ASSEMBLER CALL:</entry>
	<entry>OS9 F$SetTsk</entry>
</row>
<row>
	<entry>MACHINE CODE:</entry>
	<entry>103F 41</entry>
</row>
<row>
	<entry>INPUT:</entry>
	<entry>(X) = Process Descriptor pointer</entry>
</row>
<row>
	<entry>OUTPUT:</entry>
	<entry>None.</entry>
</row>
<row>
	<entry>ERROR OUTPUT:</entry>
	<entry><literallayout>(CC) = C bit set.
(B) = Appropriate error code.</literallayout></entry>
</row>
</tbody>
</tgroup>
</informaltable>

<para>Sets the process Task DAT registers.</para>

<note><para>This is a privileged system mode service request.</para></note>
</sect1>

<sect1>
<title>F$SLink - System Link</title>

<informaltable frame="none" rowsep="0" colsep="0">
<tgroup cols="2">
<colspec colwidth="1.4in"/>
<colspec colwidth="3.6in"/>
<tbody>
<row>
	<entry>ASSEMBLER CALL:</entry>
	<entry>OS9 F$SLink</entry>
</row>
<row>
	<entry>MACHINE CODE:</entry>
	<entry>103F 34</entry>
</row>
<row>
	<entry>INPUT:</entry>
	<entry><literallayout>(A) = Module Type.
(X) = Module Name string pointer.
(Y) = Name string DAT image pointer.</literallayout></entry>
</row>
<row>
	<entry>OUTPUT:</entry>
	<entry><literallayout>(A) = Module Type.
(B) = Module Revision.
(X) = Updated Name string pointer.
(Y) = Module Entry point.
(U) = Module pointer.</literallayout></entry>
</row>
<row>
	<entry>ERROR OUTPUT:</entry>
	<entry><literallayout>(CC) = C bit set.
(B) = Appropriate error code.</literallayout></entry>
</row>
</tbody>
</tgroup>
</informaltable>

<para>Links a module whose name is outside the current (system) process'
adress space into the Address space that contains its name.</para>

<note><para>This is a privileged system mode service request.</para></note>
</sect1>

<sect1>
<title>F$SRqMem - System Memory Request</title>

<informaltable frame="none" rowsep="0" colsep="0">
<tgroup cols="2">
<colspec colwidth="1.4in"/>
<colspec colwidth="3.6in"/>
<tbody>
<row>
	<entry>ASSEMBLER CALL:</entry>
	<entry>OS9 F$SRqMem</entry>
</row>
<row>
	<entry>MACHINE CODE:</entry>
	<entry>103F 28</entry>
</row>
<row>
	<entry>INPUT:</entry>
	<entry>(D) = byte count of requested memory</entry>
</row>
<row>
	<entry>OUTPUT:</entry>
	<entry><literallayout>(D) = byte count of memory granted
(U) = pointer to memory block allocated</literallayout></entry>
</row>
<row>
	<entry>ERROR OUTPUT:</entry>
	<entry><literallayout>(CC) = C bit set.
(B) = Appropriate error code.</literallayout></entry>
</row>
</tbody>
</tgroup>
</informaltable>

<para>Allocates the requested memory (rounded up to the nearest
page) in the system's address space. Useful for allocating I/O buffers and
other semi-permanent system memory.</para>

<note><para>This is a privileged system mode service request.</para></note>
</sect1>

<sect1 xml:id="f.srtmem">
<title>F$SRtMem - System Memory Return</title>

<informaltable frame="none" rowsep="0" colsep="0">
<tgroup cols="2">
<colspec colwidth="1.4in"/>
<colspec colwidth="3.6in"/>
<tbody>
<row>
	<entry>ASSEMBLER CALL:</entry>
	<entry>OS9 F$SRtMem</entry>
</row>
<row>
	<entry>MACHINE CODE:</entry>
	<entry>103F 29</entry>
</row>
<row>
	<entry>INPUT:</entry>
	<entry><literallayout>(D) = Byte count of memory being returned
(U) = Address of memory block being returned</literallayout></entry>
</row>
<row>
	<entry>ERROR OUTPUT:</entry>
	<entry><literallayout>(CC) = C bit set.
(B) = Appropriate error code.</literallayout></entry>
</row>
</tbody>
</tgroup>
</informaltable>

<para>
Returns system memory (e.g., memory in the system address space)
after it is no longer needed.</para>

<note><para>This is a privileged system mode service request.</para></note>
</sect1>

<sect1>
<title>F$STABX - Store A at 0,X in task B</title>
<informaltable frame="none" rowsep="0" colsep="0">
<tgroup cols="2">
<colspec colwidth="1.4in"/>
<colspec colwidth="3.6in"/>
<tbody>
<row>
	<entry>ASSEMBLER CALL:</entry>
	<entry>OS9 F$STABX</entry>
</row>
<row>
	<entry>MACHINE CODE:</entry>
	<entry>103F 4A</entry>
</row>
<row>
	<entry>INPUT:</entry>
	<entry><literallayout>(A) = Data byte to store in Task's address space
(B) = Task number
(X) = Logical address in task's address space to store</literallayout></entry>
</row>
<row>
	<entry>OUTPUT:</entry>
	<entry>None.</entry>
</row>
<row>
	<entry>ERROR OUTPUT:</entry>
	<entry><literallayout>(CC) = C bit set.
(B) = Appropriate error code.</literallayout></entry>
</row>

</tbody>
</tgroup>
</informaltable>

<para>This is similar to the assembly instruction <quote>STA 0,X</quote>, except
that (X) refers to an address in the given task's address space
rather than the current address space.</para>

<note><para>This is a privileged system mode service request.</para></note>
</sect1>

<sect1>
<title>F$SUser Set User ID number</title>
<informaltable frame="none" rowsep="0" colsep="0">
<tgroup cols="2">
<colspec colwidth="1.4in"/>
<colspec colwidth="3.6in"/>
<tbody>
<row>
	<entry>ASSEMBLER CALL:</entry>
	<entry>OS9 F$SUser</entry>
</row>
<row>
	<entry>MACHINE CODE:</entry>
	<entry>103F 1C</entry>
</row>
<row>
	<entry>INPUT:</entry>
	<entry>(Y) = desired User ID number</entry>
</row>
<row>
	<entry>OUTPUT:</entry>
	<entry>None</entry>
</row>
<row>
	<entry>ERROR OUTPUT:</entry>
	<entry><literallayout>(CC) = C bit set.
(B) = Appropriate error code.</literallayout></entry>
</row>

</tbody>
</tgroup>
</informaltable>

<para>Alters the current user ID to that specified, without error checking.</para>
</sect1>

<sect1>
<title>F$UnLoad - Unlink module by name</title>
<informaltable frame="none" rowsep="0" colsep="0">
<tgroup cols="2">
<colspec colwidth="1.4in"/>
<colspec colwidth="3.6in"/>
<tbody>
<row>
	<entry>ASSEMBLER CALL:</entry>
	<entry>OS9 F$UnLoad</entry>
</row>
<row>
	<entry>MACHINE CODE:</entry>
	<entry>103F 1D</entry>
</row>
<row>
	<entry>INPUT:</entry>
	<entry><literallayout>(A) = Module Type
(X) = Module Name pointer</literallayout></entry>
</row>
<row>
	<entry>OUTPUT:</entry>
	<entry>None</entry>
</row>
<row>
	<entry>ERROR OUTPUT:</entry>
	<entry><literallayout>(CC) = C bit set.
(B) = Appropriate error code.</literallayout></entry>
</row>

</tbody>
</tgroup>
</informaltable>
<para>Locates the module to the module directory, decrements its link
count and removes it from the directory if the count reaches zero.
Note that this call differs from F$UnLink in that the a pointer to module
name is supplied rather than the address of the module header.</para>
</sect1>

<sect1>
<title>I$DeletX - Delete a file</title>
<informaltable frame="none" rowsep="0" colsep="0">
<tgroup cols="2">
<colspec colwidth="1.4in"/>
<colspec colwidth="3.6in"/>
<tbody>
<row>
	<entry>ASSEMBLER CALL:</entry>
	<entry>OS9 I$DeletX</entry>
</row>
<row>
	<entry>MACHINE CODE:</entry>
	<entry>103F 90</entry>
</row>
<row>
	<entry>INPUT:</entry>
	<entry><literallayout>(X) = Address of pathlist
(A) = Access mode.</literallayout></entry>
</row>
<row>
	<entry>OUTPUT:</entry>
	<entry>(X) = Updated past pathlist (trailing spaces skipped).</entry>
</row>
<row>
	<entry>ERROR OUTPUT:</entry>
	<entry><literallayout>(CC) = C bit set.
(B) = Appropriate error code.</literallayout></entry>
</row>

</tbody>
</tgroup>
</informaltable>

<para>This service request deletes the file specified by the pathlist.
The file must have write permission attributes (public write if
not the owner), and reside on a multi-file mass storage device.
Attempts to delete devices will result in error.</para>

<para>The access mode is used to specify the current working directory
or me current execution directory (but not both) in the absence of
a full pathlist. If the access mode is read, write, or update, the
current data directory is assumed. If the access mode is
execute, the current execution directory is assumed. Note that
if a full pathlist (a pathlist beginning with a <quote>/</quote>) appears, the
access mode is ignored.</para>

<para>ACCESS MODES:</para>
<literallayout>
1 = Read
2 = Write
3 = Update (read or write)
4 = Execute
</literallayout>
</sect1>
</appendix>
